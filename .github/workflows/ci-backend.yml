name: CI Back End

on:
  push:
    branches:
      - main
      - "release/**"
  pull_request:
    branches:
      - main
      - "release/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Node.js version updated to meet pnpm requirements

      - name: Install pnpm
        run: npm install -g pnpm

      # Backend
      - name: Install backend dependencies
        working-directory: tms-backend
        run: pnpm install

      - name: Run backend tests
        working-directory: tms-backend
        run: pnpm run test --coverage

      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage

      - name: Cache backend pnpm store
        uses: actions/cache@v3
        with:
          path: |
            tms-backend/node_modules/.pnpm-store
            tms-backend/node_modules/.cache/pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('tms-backend/**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') # Deploy only on `main` branch or `release/**` branches

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        working-directory: tms-backend
        run: |
          curl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -
          sudo yum install -y nodejs
          npm install -g pnpm
          pnpm install

      - name: Decode and set up SSH key
        env:
          SSH_PRIVATE_KEY_BASE64: ${{ secrets.SSH_PRIVATE_KEY_BASE64 }}
        run: |
          echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > modelty.pem
          chmod 600 modelty.pem

      - name: Deploy to EC2
        run: |
          ssh -i "modelty.pem" ec2-user@http://18.232.111.71:3000 <<EOF
            cd /home/ec2-user/traning-batch-1-0804/tms-backend
            git pull origin main
           
            pnpm install
            pnpm run build
            pm2 start dist/main.js
            pm2 startup
            pm2 save
          EOF
